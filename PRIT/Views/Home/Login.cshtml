@model PRIT.Entity.tbl_Registration
@{
    ViewBag.Title = "Login";
}

<style>


    input[type=text], input[type=password] {
        width: 100%;
        padding: 12px 20px;
        margin: 8px 0;
        display: inline-block;
        border: 1px solid #ccc;
        box-sizing: border-box;
        margin-left: 1%;
    }

button {
    background-color: #4CAF50;
    color: white;
    padding: 14px 20px;
    margin: 8px 0;
    border: none;
    cursor: pointer;
    width: 100%;
}

button:hover {
    opacity: 0.8;
}

    .cancelbtn {
        width: auto;
        padding: 10px 18px;
        background-color: #0565C8;
        text-align: center;
        margin-left: 20px;
    }

    .imgcontainer {
        text-align: center;
        margin-top: 20px;
        margin-bottom: 20px;
        margin-left: 85px;
    }

    .myContainer {
        text-align: center !important;
    }

img.avatar {
    width: 10%;
    border-radius: 50%;
}

.containera {
    padding: 16px;
}

span.psw {
    float: right;
  
}
    
    span.signup {
        float: left;
       
    }

</style>
@using (Html.BeginForm("Login", "Home", new { returnUrl = Request.QueryString["ReturnUrl"] }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="imgcontainer">
            <img src="~/images/img_avatar2.png" alt="Avatar" class="avatar">

        </div>

        <div class="container myContainer">
            <label><b>Username</b></label>
            @*<input type="text" placeholder="Enter Username" name="uname" id="unameId" required>*@
            @Html.ValidationMessage("spnmsg", new { @class = "alert-danger fade in", @style = "position: relative;color:red" })        
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger error-msg" })
            @Html.TextBoxFor(m => m.UserName)
            <br />
            <label><b>Password</b></label>
            @*<input type="password" placeholder="Enter Password" id="passId" name="psw" required>*@
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger error-msg" })
            @Html.PasswordFor(m => m.Password)
            <br />
            <button type="submit" id="loginId" class="cancelbtn">Login</button>
           
            <label style="margin-left: 20px;">
                <input type="checkbox" checked="checked"> Remember me
            </label>
            <br />
            <br/>
            <label id="msgError" style="color:red"><b></b>@ViewBag.message</label>

        </div>

        <div class="containera" style="background-color:#f1f1f1;padding-bottom: 32px;">
            @*<button type="button" class="cancelbtn">Cancel</button>*@
            <span class="signup">New User ? <a href="@Url.Action("Register", "Home")">Register Here</a></span>
            <span class="psw">Forgot <a href="@Url.Action("ForgotPassword", "Home")">password?</a></span>
        </div>

    </div>
}
<script>

    $(document).ready(function () {


       
        $('#UserName').focus();

            localStorage.clear();
        
        //$("#loginId").click(function (e) {
        //    debugger;
        //    var unameId = $('#unameId').val(); ;
        //    var passId = $('#passId').val();
           
        //    var objData = { UserName: unameId, Password: passId };
        //    //

        //    //$.get(url, { input: name }, function (data) {
        //    //    $("#rData").html(data);
        //    //});
        //        $.ajax({
        //            type: "POST",
        //            url: "../Home/Login",
        //            contentType: "application/json; charset=utf-8",
        //            data: JSON.stringify(objData),
        //            dataType: "json",
        //            success: function (result, status, xhr) {
        //               // $("#dataDiv").html(result);
        //                alert('data saved');
        //            },
        //            error: function (xhr, status, error) {
        //               // $("#dataDiv").html("Result: " + status + " " + error + " " + xhr.status + " " + xhr.statusText)
        //                alert('error ');
        //            }
        //        });

        //    return false;
        //});

    });

</script>  
