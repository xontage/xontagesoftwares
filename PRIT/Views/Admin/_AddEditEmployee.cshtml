@model PRIT.Entity.tbl_Employee

@{
    Layout = null;
}

<link href="~/Content/css/bootstrap-datepicker.min.css" rel="stylesheet" />

 
<style>
    .form-group {
        margin-bottom: 15px;
        margin-bottom: 15px;
        float: left;
        width: 26%;
        margin-right: 51px !important;
        margin-top: 10px !important;
        margin-left: 22px !important;
    }

    .input-group {
        width: 465px;
    }

    .error-msg {
        position: absolute;
        top: 37px;
        left: 0;
    }
     
</style>

 
<link href="~/css/jquery-ui.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-datepicker.min.js"></script>
<div class="modal fade" id="employeeModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">@(Model.ID == 0 ? "Employee Management" : "Update Employee")</h4>
            </div>
            <div class="modal-body">
                @using (Ajax.BeginForm("AddEditEmployee", "Admin", new { area = "" }, new AjaxOptions { OnSuccess = "fnOnEmployeeSuccess", HttpMethod = "POST" }, new { @class = "form-horizontal", @id = "frmResourceCategory" }))
                {
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(r => r.ID)

                    <div class="container">
                        <div class="row main">
                            <div class="main-login main-center">
                                <div class="form-group">
                                    <label for="FirstName" class="cols-sm-2 control-label">First Name *</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-user fa" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.FirstName, new
                                            {
                                                @class = "form-control",
                                                id = "FirstName",
                                                placeholder = "Enter Your First Name"
                                            })
                                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger error-msg" })
                                        </div>

                                    </div>

                                </div>
                                <div class="form-group">
                                    <label for="MiddleName" class="cols-sm-2 control-label">Middle Name</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-user fa" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.MiddleName, new
                                            {
                                                @class = "form-control",
                                                id = "MiddleName",
                                                placeholder = "Enter Your Middle Name"
                                            })
                                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>

                                </div>
                                <div class="form-group">
                                    <label for="LastName" class="cols-sm-2 control-label">Last Name *</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-user fa" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.LastName, new
                                            {
                                                @class = "form-control",
                                                id = "LastName",
                                                placeholder = "Enter Your Last Name"
                                            })
                                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>

                                </div>
                                <div class="form-group">
                                    <label for="gender" class="cols-sm-2 control-label">Gender*</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">
                                            @*<i class="glyphicon glyphicon-exclamation-sign"></i>*@
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></i></span>
                                            @Html.RadioButtonFor(model => model.Gender, "M", true) Male
                                            @Html.RadioButtonFor(model => model.Gender, "F", false) Female
                                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger error-msg" })
                                            <br />
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="email" class="cols-sm-2 control-label"> Email*</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-envelope fa" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.EmailId, new { @class = "form-control", id = "email", placeholder = "Enter Email", required = "required" })
                                            @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="mobileNo" class="cols-sm-2 control-label">Mobile Number *</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">
                                            @* <i class="glyphicon glyphicon-earphone"></i>*@
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-earphone" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.MobileNo , new { @class = "form-control", id = "MobileNo", placeholder = "Enter Mobile Number" })
                                            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="altmobileNo" class="cols-sm-2 control-label">Alternative Mobile Number</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-phone-alt" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.AltMobileNo, new { @class = "form-control", id = "AltMobileNo", placeholder = "Enter Alternative Mobile Number" })
                                            @Html.ValidationMessageFor(model => model.AltMobileNo, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="Designation" class="cols-sm-2 control-label">Designation</label>
                                    <div class="cols-sm-10">

                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-pencil" aria-hidden="true"></i></span>
                                            @*@Html.DropDownListFor(model => model.Designation, ViewBag.ddlEmpDesignation as SelectList, new { @class = "form-control" })*@
                                            @Html.DropDownListFor(model => model.Designation, new SelectList(ViewBag.ddlEmpDesignation as SelectList, "Value", "Text"), "--SELECT EMPLOYEE DESIGNATION--", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger error-msg" })



                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="MaritalStatus" class="cols-sm-2 control-label">Marital Status</label>
                                    <div class="cols-sm-10">

                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-heart" aria-hidden="true"></i></span>
                                            @*@Html.DropDownListFor(model => model.MaritalStatus, ViewBag.ddlMaritalStatus as SelectList, new { @class = "form-control" })*@
                                            @Html.DropDownListFor(model => model.MaritalStatus, new SelectList(ViewBag.ddlMaritalStatus as SelectList, "Value", "Text"), "--SELECT MARITAL STATUS--", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="DateofBirth" class="cols-sm-2 control-label">Date of Birth *</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-calendar" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.DateofBirth, new { @class = "form-control", id = "DateofBirth", placeholder = "Enter Date of Birth" })
                                            @Html.ValidationMessageFor(model => model.DateofBirth, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="pincode" class="cols-sm-2 control-label">Pincode*</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-road" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.Pincode, new { @class = "form-control", id = "pincode", placeholder = "Enter Pincode" })
                                            @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="city" class="cols-sm-2 control-label">City</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-tint" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.City, new { @class = "form-control", @readonly = "readonly", id = "City", placeholder = "Enter City" })
                                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="city" class="cols-sm-2 control-label">State</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-stats" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.State, new { @class = "form-control", @readonly = "readonly", id = "State", placeholder = "Enter State" })
                                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">

                                    <label for="country" class="cols-sm-2 control-label">Country</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-plane" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.Country, new { @class = "form-control", @readonly = "readonly", id = "Country", placeholder = "Enter Country"})
                                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="address" class="cols-sm-2 control-label">Address *</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-map-marker" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.Address, new { @class = "form-control", id = "Address", placeholder = "Enter Address" })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="HighestEducation" class="cols-sm-2 control-label">Highest Education *</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">


                                            <span class="input-group-addon"><i class="glyphicon glyphicon-book" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.HighestEducation, new { @class = "form-control", id = "HighestEducation", placeholder = "Enter Highest Education" })
                                            @Html.ValidationMessageFor(model => model.HighestEducation, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="Specialization" class="cols-sm-2 control-label">Specialization</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-certificate" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.Specialization, new { @class = "form-control", id = "Specialization", placeholder = "Enter Specialization" })
                                            @Html.ValidationMessageFor(model => model.Specialization, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="InstituteName" class="cols-sm-2 control-label">Institute Name</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-file" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.InstituteName, new { @class = "form-control", id = "InstituteName", placeholder = "Enter Institute Name" })
                                            @Html.ValidationMessageFor(model => model.InstituteName, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="YearOfPassing" class="cols-sm-2 control-label">Year Of Passing*</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-calendar" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.YearOfPassing, new { @class = "form-control", id = "YearOfPassing", placeholder = "Enter Year Of Passing" })
                                            @Html.ValidationMessageFor(model => model.YearOfPassing, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="University" class="cols-sm-2 control-label">University</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-certificate" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.University, new { @class = "form-control", id = "University", placeholder = "Enter University" })
                                            @Html.ValidationMessageFor(model => model.University, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="InstituteLocation" class="cols-sm-2 control-label">Institute Location</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-home" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.InstituteLocation, new { @class = "form-control", id = "InstituteLocation", placeholder = "Enter Institute Location" })
                                            @Html.ValidationMessageFor(model => model.InstituteLocation, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="Percentage" class="cols-sm-2 control-label">Percentage*</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-question-sign" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.Percentage, new { @class = "form-control", id = "Percentage", placeholder = "Enter Percentage" })
                                            @Html.ValidationMessageFor(model => model.Percentage, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="EmployeeType" class="cols-sm-2 control-label">Employee Type*</label>
                                    <div class="cols-sm-10">

                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-repeat" aria-hidden="true"></i></span>
                                            @*@Html.DropDownListFor(model => model.EmployeeType, ViewBag.ddlEmployeeType as SelectList, new { @class = "form-control" })*@
                                            @Html.DropDownListFor(model => model.EmployeeType, new SelectList(ViewBag.ddlEmployeeType as SelectList, "Value", "Text"), "--SELECT EMPLOYEE TYPE--", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.EmployeeType, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="AdharCardNo" class="cols-sm-2 control-label">Adhar Card No*</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-question-sign" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.AdharCardNo, new { @class = "form-control", id = "AdharCardNo", placeholder = "Enter Adhar no" })
                                            @Html.ValidationMessageFor(model => model.AdharCardNo, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="PANNo" class="cols-sm-2 control-label">PAN Card No*</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-question-sign" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.PANNo, new { @class = "form-control", id = "PANNo", placeholder = "Enter PAN No" })
                                            @Html.ValidationMessageFor(model => model.PANNo, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="PassportNo" class="cols-sm-2 control-label">Passport No</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-question-sign" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.PassportNo, new { @class = "form-control", id = "PassportNo", placeholder = "Enter Passport No" })
                                            @Html.ValidationMessageFor(model => model.PassportNo, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="BloodGroup" class="cols-sm-2 control-label">Blood Group</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-question-sign" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.BloodGroup, new { @class = "form-control", id = "BloodGroup", placeholder = "Enter Blood Group" })
                                            @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="BankName" class="cols-sm-2 control-label">Bank Name</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-question-sign" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.BankName, new { @class = "form-control", id = "BankName", placeholder = "Enter Bank Name" })
                                            @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="AccountNo" class="cols-sm-2 control-label">Account No</label>
                                    <div class="cols-sm-10">
                                        <div class="input-group">

                                            <span class="input-group-addon"><i class="glyphicon glyphicon-question-sign" aria-hidden="true"></i></span>

                                            @Html.TextBoxFor(model => model.AccountNo, new { @class = "form-control", id = "AccountNo", placeholder = "Enter Bank Account No" })
                                            @Html.ValidationMessageFor(model => model.AccountNo, "", new { @class = "text-danger error-msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group" style="margin-left: 216px !important; width:100%; margin-bottom:0 !important;">
                                    <input type="submit" value="Save Employee" class="btn btn-primary btn-block" style="display: inline-block;">
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

        </div>

    </div>
</div>
 

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
@*<script language="javascript" src="https://maps.google.com/maps/api/js?sensor=false"></script>*@
@*//key by sachin*@
@*<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCxvxzBwz0VISNal0XK36vz5u-F5TIqipI"></script>*@
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD7J27Hw6G8JphnwGXEkv53mn0KTLyuYTI"></script>
<script language="javascript">
    function response(obj) {
        console.log(obj);
    }
    $("#pincode").blur(function () {
        var zip = document.forms[0].pincode.value;
        debugger
        if (zip.length >= 5 && typeof google != 'undefined') {
            var addr = {};
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'address': zip }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results.length >= 1) {
                        for (var ii = 0; ii < results[0].address_components.length; ii++) {
                            var street_number = route = street = city = state = zipcode = country = formatted_address = '';
                            var types = results[0].address_components[ii].types.join(",");
                            if (types == "street_number") {
                                addr.street_number = results[0].address_components[ii].long_name;
                            }
                            if (types == "route" || types == "point_of_interest,establishment") {
                                addr.route = results[0].address_components[ii].long_name;
                            }
                            if (types == "sublocality,political" || types == "locality,political" || types == "neighborhood,political" || types == "administrative_area_level_3,political" || types == "administrative_area_level_2,political") {
                                addr.city = (city == '' || types == "locality,political") ? results[0].address_components[ii].long_name : city;
                                $('#City').val(addr.city);
                            }
                            if (types == "administrative_area_level_1,political") {
                                addr.state = results[0].address_components[ii].short_name;
                                $('#State').val(addr.state);

                            }
                            if (types == "postal_code" || types == "postal_code_prefix,postal_code") {
                                addr.zipcode = results[0].address_components[ii].long_name;
                            }
                            if (types == "country,political") {
                                addr.country = results[0].address_components[ii].long_name;
                                $('#Country').val(addr.country);

                            }

                        }
                        addr.success = true;
                        for (name in addr) {
                            console.log('### google maps api ### ' + name + ': ' + addr[name]);
                        }
                        response(addr);

                    } else {
                        response({ success: false });
                    }
                } else {
                    response({ success: false });
                }
            });
        } else {
            response({ success: false });
        }
    });

    var start = new Date();
    $('#DateofBirth').datepicker({
        format: "dd/mm/yyyy",
        autoclose: true,
        date: function (value, element) {
            $.culture = Globalize.culture("en-GB");
            var date = Globalize.parseDate(value, "dd/mm/yyyy", "en-GB");
            return this.optional(element) ||
                !/Invalid|NaN/.test(new Date(date).toString());
        },
    }).on('changeDate', function (e) {
        });


    $('#YearOfPassing').datepicker({
        minViewMode: 2,
        format: 'yyyy'
        });
</script>
<style type="text/css">
    .style1 {
        color: #990000;
        text-decoration: underline;
    }

    .style2 {
        font-size: large;
        font-family: Arial, Helvetica, sans-serif;
    }
</style>

